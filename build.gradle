buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
		snippetsDir = file('build/generated-snippets')
	}
	repositories {
		mavenCentral()
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'org.asciidoctor.convert'

group = 'com.upc.gessi.qrapids'
version = '0.5'
sourceCompatibility = 1.8

war {
	archivesBaseName = 'LD-forecast-rest'
	archiveVersion.set('0.5')
	enabled = true
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.nuiton.thirdparty:REngine:1.7-3'
	implementation 'org.nuiton.thirdparty:Rserve:1.7-3'
	implementation files ('lib/LD-forecast-0.5.jar')
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.3.RELEASE'
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.3.RELEASE'

	testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.22.0'

	// Comment this line to launch application from developing environment
	// Uncomment this line before generating .war file
	// providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

asciidoctor {
	sourceDir = file('docs/asciidoc')
	inputs.dir snippetsDir
	outputDir = file('docs/asciidoc')
	separateOutputDirs = false
	dependsOn test
}

